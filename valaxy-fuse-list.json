[{"title":"","tags":[],"categories":[],"author":"w乐意","excerpt":"","link":"/404","content":""},{"title":"关于我","tags":[],"categories":[],"author":"w乐意","excerpt":"\n04年大学生一枚~\n\n\n\n平时喜欢捣鼓有趣的东西，欢迎来到我的博客\n\n\n\n电子邮箱：2931366539@qq.com","link":"/about","content":"\n04年大学生一枚~\n\n\n\n平时喜欢捣鼓有趣的东西，欢迎来到我的博客\n\n\n\n电子邮箱：2931366539@qq.com"},{"title":"关于站点","tags":[],"categories":[],"author":"w乐意","excerpt":"\n我第一次接触博客系统，巧合之下看到了云游君开发的Valaxy框架，感觉很好看，就试着部署了一下，纯小白，还在不断学习当中。\n\n\n\n[Valaxy点这里](https://valaxy.site)\n","link":"/about/site","content":"\n我第一次接触博客系统，巧合之下看到了云游君开发的Valaxy框架，感觉很好看，就试着部署了一下，纯小白，还在不断学习当中。\n\n\n\n[Valaxy点这里](https://valaxy.site)\n"},{"title":"","tags":[],"categories":[],"author":"w乐意","excerpt":"","link":"/archives","content":""},{"title":"","tags":[],"categories":[],"author":"w乐意","excerpt":"","link":"/categories","content":""},{"title":"我的小伙伴们","tags":[],"categories":[],"author":"w乐意","excerpt":"\n<YunLinks :links=\"frontmatter.links\" :random=\"frontmatter.random\" />\n\n<https://www.yunyoujun.cn>\n","link":"/links","content":"\n<YunLinks :links=\"frontmatter.links\" :random=\"frontmatter.random\" />\n\n<https://www.yunyoujun.cn>\n"},{"title":"","tags":[],"categories":[],"author":"w乐意","excerpt":"","link":"/tags","content":""},{"title":"示例文章","tags":[],"categories":[],"author":"w乐意","excerpt":"\n# Nuxt Content 中的自定义组件示例\n\n\n\n<details>\n  <summary style=\"font-weight: bold; background-color: #f0f8f","link":"/posts/Untitled","content":"\n# Nuxt Content 中的自定义组件示例\n\n\n\n<details>\n  <summary style=\"font-weight: bold; background-color: #f0f8ff;\">小白看过来!</summary> <!-- 在这里添加 color: black; -->\n  <div style=\"padding-left: 1.5em; margin-top: 0.5em;\">\n    <p style=\"color: black;\">什么是VSCode?</p> <!-- 在这里添加 color: black; -->\n    <p style=\"color: black;\"><strong><span style=\"color: black;\">Visual Studio Code</span></strong>，一款炒鸡方便的代码编辑器，建议大家人手一个</p>\n  </div>\n</details>\n"},{"title":"模电复习（一）","tags":["模电","复习"],"categories":["学习"],"author":"w乐意","excerpt":"\n> **记录一下复习模电的过程。**\n\n","link":"/posts/analog-electronics-review-1","content":"\n> **记录一下复习模电的过程。**\n\n<!-- more -->\n\n### 集成运放中的单元电路\n\n#### 直接耦合放大电路的零点漂移现象\n\n> **输入电压$\\Delta u_\\text{I}$为零而输出电压$\\Delta u_\\text{O}$的变化不为零的现象称为零点漂移现象**\n\n任何元件参数的变化，如电源电压的波动（使用高质量的稳压电源）、元件的老化（使用经过老化试验的元件）、半导体元件参数随温度变化而产生的变化（主要原因）。因此也称零点漂移为温度漂移（**温漂**）。\n\n#### 抑制温度漂移的方法\n\n> 从某种意义上来讲，零点漂移就是Q点的漂移\n\n1. 在电路中引入直流负反馈\n2. 采用温度补偿的方法，利用热敏元件来抵消放大管的变化\n3. 采用特性相同的管子，使它们的温漂相互抵消，构成“差分放大电路”\n\n#### 差分放大电路\n\n差分放大电路是构成多级直接耦合放大电路的基本单元电路，常作为集成运放的输入级\n\n**共模信号：大小相等、极性相同的信号**\n\n**差模信号：大小相等、极性相反的信号**\n\n> 由于实际电阻的阻值误差各不相同，特别是晶体管特性的分散性，任何分立元件差分放大电路的参数不可能理想对称，也就不可能完全抑制零点漂移；而在集成电路中，由于相邻元件具有良好的对称性，故能够实现趋于参数理想对称的差分放大电路。\n\n长尾式差分放大电路\n\n由于电路参数的理想对称性，温度变化时管子的电流变化完全相同，故可以将温度漂移等效成共模信号。\n\n实际上，差分放大电路对共模信号的抑制，不但利用了电路参数对称性所起的补偿作用，使两只晶体管的集电极电位变化相等；而且还利用了发射极电阻对共模信号的负反馈作用，抑制了每只晶体管集电极电流的变化，从而抑制集电极电位的变化。\n\n#### 改进型差分放大电路\n\n在差分放大电路中，增大发射极电阻$R_\\text{e}$的阻值，能够有效抑制每一边电路的温漂，提高共模抑制比。但是如果阻值太大，电源电压也必须提高，考虑到故障情况下这样高的电源电压会全部加在差分管上，差分管必须选择高耐压管，对于小信号放大电路这是不合理的。差分电路需要既能采用较低的电源电压、又能有很大的等效电阻$R_\\text{e}$的发射极电路，**电流源**具备上述特点。\n\n"},{"title":"数电复习（一）","tags":["数电","复习"],"categories":["学习"],"author":"w乐意","excerpt":"\n> **记录一下复习数电的过程。**\n\n","link":"/posts/digtal-electronics-review-1","content":"\n> **记录一下复习数电的过程。**\n\n<!-- more -->\n\n## 第一章 数制与码制\n\n常用的数制：十进制、二进制、八进制、十六进制\n\n任意进制（N进制）数展开成十进制数公式\n$$\nD = \\sum k_i N^i\n$$\n$k_i$ 是第 $i$ 位的系数\n\n\n$$\n\\begin{aligned}\n(101.11)_2 &= 1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 + 1 \\times 2^{-1} + 1 \\times 2^{-2}\\\\\n&=(5.75)_{10}\n\\end{aligned}\n$$\n\n<center><b>不同进制数对照表</b></center>\n\n| 十进制（Decimal） | 二进制（Binary） | 八进制（Octal） | 十六进制（Hexadecimal） |\n| :---------------: | :--------------: | :-------------: | :---------------------: |\n|        00         |       0000       |       00        |            0            |\n|        01         |       0001       |       01        |            1            |\n|        02         |       0010       |       02        |            2            |\n|        03         |       0011       |       03        |            3            |\n|        04         |       0100       |       04        |            4            |\n|        05         |       0101       |       05        |            5            |\n|        06         |       0110       |       06        |            6            |\n|        07         |       0111       |       07        |            7            |\n|        08         |       1000       |       10        |            8            |\n|        09         |       1001       |       11        |            9            |\n|        10         |       1010       |       12        |            A            |\n|        11         |       1011       |       13        |            B            |\n|        12         |       1100       |       14        |            C            |\n|        13         |       1101       |       15        |            D            |\n|        14         |       1110       |       16        |            E            |\n|        15         |       1111       |       17        |            F            |\n\n#### 数制转换\n\n十进制转换成二进制\n\n> 除二取余（整数部分）、乘二取整（小数部分）\n\n二进制转换为十六进制\n\n> 4位二进制数看作一个整体，用一位等值的十六进制数替代\n\n十六进制转换为二进制\n\n> 将每一位十六进制数用等值的4位二进制数替代\n\n二进制转换为八进制\n\n> 3位二进制数看作一个整体，用一位等值的八进制数替代\n\n八进制转换为二进制\n\n> 将每一位八进制数用等值的3位二进制数替代\n\n#### 反码、补码和补码运算\n\n二进制 $N$ 的反码 $(N)_{INV}$ 定义\n$$\n(N)_{INV} =\n\\begin{cases}\n  N & N > 0 \\\\\n  (2^n -1) - N   & N < 0\n\\end{cases}\n$$\n\n> 将N中每一位的1改为0、0改为1，就得到反码，符号位除外\n\n二进制负数的补码等于它的反码加1\n\n<center><b>原码、反码、补码对照表</b></center>\n\n| 十进制数 | 二进制原码 | 二进制反码 | 二进制补码 |\n| :------: | :--------: | :--------: | :--------: |\n|    +7    |    0111    |    0111    |    0111    |\n|    +6    |    0110    |    0110    |    0110    |\n|    +5    |    0101    |    0101    |    0101    |\n|    +4    |    0100    |    0100    |    0100    |\n|    +3    |    0011    |    0011    |    0011    |\n|    +2    |    0010    |    0010    |    0010    |\n|    +1    |    0001    |    0001    |    0001    |\n|    +0    |    0000    |    0000    |    0000    |\n|    -1    |    1001    |    1110    |    1111    |\n|    -2    |    1010    |    1101    |    1110    |\n|    -3    |    1011    |    1100    |    1101    |\n|    -4    |    1100    |    1011    |    1100    |\n|    -5    |    1101    |    1010    |    1011    |\n|    -6    |    1110    |    1001    |    1010    |\n|    -7    |    1111    |    1000    |    1001    |\n|    -8    |    1000    |    1111    |    1000    |\n\n> 规定用1000作为-8的补码，而不用来表示-0\n\n用二进制补码运算时要舍弃产生的进位。\n\n<center><b>运算示例</b></center>\n\n|   竖式运算   |     二进制补码运算     |   竖式运算   |     二进制补码运算     |\n| :----------: | :--------------------: | :----------: | :--------------------: |\n| +13<br />+10 | 0  01101<br />0  01010 | +13<br />-10 | 0  01101<br />1 10110  |\n|     +23      |        0  10111        |      +3      |      (1)0  00011       |\n| -13<br />+10 | 1  10011<br />0  01010 | -13<br />-10 | 1  10011<br />1  10110 |\n|      -3      |        1  11101        |     -23      |      (1)1  01001       |\n\n#### 几种常见的编码\n\n<center><b>几种常见的十进制代码</b></center>\n\n| 种类 | 8421码(BCD代码) |   余3码    |   2421码   |   5211码   | 余3循环码  | 格雷码 |\n| :--: | :-------------: | :--------: | :--------: | :--------: | :--------: | :----: |\n|  0   |   0  0  0  0    | 0  0  1  1 | 0  0  0  0 | 0  0  0  0 | 0  0  1  0 |  0000  |\n|  1   |   0  0  0  1    | 0  1  0  0 | 0  0  0  1 | 0  0  0  1 | 0  1  1  0 |  0001  |\n|  2   |   0  0  1  0    | 0  1  0  1 | 0  0  1  0 | 0  1  0  0 | 0  1  1  1 |  0011  |\n|  3   |   0  0  1  1    | 0  1  1  0 | 0  0  1  1 | 0  1  0  1 | 0  1  0  1 |  0010  |\n|  4   |   0  1  0  0    | 0  1  1  1 | 0  1  0  0 | 0  1  1  1 | 0  1  0  0 |  0110  |\n|  5   |   0  1  0  1    | 1  0  0  0 | 1  0  1  1 | 1  0  0  0 | 1  1  0  0 |  0111  |\n|  6   |   0  1  1  0    | 1  0  0  1 | 1  1  0  0 | 1  0  0  1 | 1  1  0  1 |  0101  |\n|  7   |   0  1  1  1    | 1  0  1  0 | 1  1  0  1 | 1  1  0  0 | 1  1  1  1 |  0100  |\n|  8   |   1  0  0  0    | 1  0  1  1 | 1  1  1  0 | 1  1  0  1 | 1  1  1  0 |  1100  |\n|  9   |   1  0  0  1    | 1  1  0  0 | 1  1  1  1 | 1  1  1  1 | 1  0  1  0 |  1101  |\n|  权  |   8  4  2  1    |            | 2  4  2  1 | 5  2  1  1 |            |        |\n\n格雷码最大的优点在于当它按照编码顺序一次变化时，相邻两个代码之间只有一位发生变化。这样在代码转换的过程中就不会产生过渡“噪声”。\n\n## 第二章 逻辑代数基础\n\n三种基本运算：**与（AND）、或（OR）、非（NOT）**\n\n>与运算：$Y=A \\cdot B$\n>\n>或运算：$Y=A + B$\n>\n>非运算：$Y=A'$\n>\n>异或运算：$Y=A \\oplus B = A \\cdot B' + A' \\cdot B$\n>\n>同或运算：$Y=A \\odot B = A \\cdot B + A' \\cdot B'$\n\n#### 基本公式和常用公式\n\n<center><b>基本公式</b></center>\n\n| 序号 |                    公式                     | 序号 |                  公式                   |\n| :--: | :-----------------------------------------: | :--: | :-------------------------------------: |\n|  1   |               $0 \\cdot A = 0$               |  10  |               $1'=0;0'=1$               |\n|  2   |               $1 \\cdot A = A$               |  11  |                $1+A = 1$                |\n|  3   |               $A \\cdot A = A$               |  12  |                $0+A = A$                |\n|  4   |              $A \\cdot A' = 0$               |  13  |               $A + A= A$                |\n|  5   |           $A \\cdot B = B \\cdot A$           |  14  |              $A + A' = 1$               |\n|  6   | $A \\cdot (B \\cdot C) = (A \\cdot B) \\cdot C$ |  15  |             $A + B = B + A$             |\n|  7   |  $A \\cdot (B + C) = A \\cdot B + A \\cdot C$  |  16  |       $A + (B + C) = (A + B) + C$       |\n|  8   |          $(A \\cdot B)' = A' + B'$           |  17  | $A + B \\cdot C = (A + B) \\cdot (A + C)$ |\n|  9   |                 $(A')' = A$                 |  18  |        $(A + B)' = A' \\cdot B'$         |\n\n> 公式（8）和公式（18）是**德摩根定理**，也称为**反演率**。\n\n<center><b>常用公式</b></center>\n\n| 序号 |                             公式                             |\n| :--: | :----------------------------------------------------------: |\n|  21  |                     $A + A \\cdot B = A$                      |\n|  22  |                   $A + A' \\cdot B = A + B$                   |\n|  23  |                 $A \\cdot B + A \\cdot B' = A$                 |\n|  24  |                    $A \\cdot (A + B) = A$                     |\n|  25  | $A \\cdot B + A' \\cdot C + B \\cdot C = A \\cdot B + A' \\cdot C$ <br />$A \\cdot B + A' \\cdot C + BCD = A \\cdot B + A' \\cdot C$ |\n|  26  |   $A \\cdot (A \\cdot B)' = A \\cdot B'; A' \\cdot (AB)' = A'$   |\n\n> **21：$A + A \\cdot B = A(1 + B) = A$**\n>\n> **22：$A + A' \\cdot B = (A + A') \\cdot (A + B) = A + B$**\n>\n> **23：$A \\cdot B + A \\cdot B' = A(B + B') = A \\cdot 1 = A$**\n>\n> **24：$A \\cdot (A + B) = A \\cdot A + A \\cdot B = A + A \\cdot B = A \\cdot (1 + B) = A$**\n>\n> **25：**\n> $$\n> \\begin{aligned}\n> A \\cdot B + A' \\cdot C + B \\cdot C &= A \\cdot B + A' \\cdot C + B \\cdot C(A + A')\\\\\n> &= A \\cdot B + A' \\cdot C + A \\cdot B \\cdot C + A' \\cdot B \\cdot C\\\\\n> &= A \\cdot B \\cdot (1 + C) + A' \\cdot C \\cdot (1 + B)\\\\\n> &= A \\cdot B + A' \\cdot C\n> \\end{aligned}\n> $$\n> **26：$A \\cdot (A \\cdot B)' = A \\cdot (A' + B') = A \\cdot A' + A \\cdot B' = A \\cdot B'$**\n>\n> ​        **$A' \\cdot (AB)' = A' \\cdot (A' +B') = A' \\cdot A' + A' \\cdot B' = A' + A' \\cdot B' = A'(1 + B') = A'$**\n\n#### 基本定理\n\n**代入定理**：在任何一个包含变量A的逻辑等式中，若以另外一个逻辑式代入式中所有A的位置，则等式仍然成立。\n\n**反演定理**：对于任意一个逻辑式$Y$，若将其中所有的“ $\\cdot$ ”换成“ + ”，“ + ”换成“ $\\cdot$ ”，0换成1，1换成0，原变量换成反变量，反变量换成原变量，则得到的结果就是$Y'$。\n\n**对偶定理**：若两逻辑式相等，则它们的对偶式也相等\n\n> 对于任何一个逻辑式$Y$，若将其中的“ $\\cdot$ ”换成“ + ”，“ + ”换成“  $\\cdot$  ”，0换成1，1换成0，则得到一个新的逻辑式$Y^D$，这个$Y^D$ 就称为$Y$的**对偶式**，或者说它们**互为对偶式**。\n\n#### 逻辑函数的两种标准形式\n\n**最小项**和**最大项**\n\n<center><b>三变量最小项的编号表</b></center>\n\n|  最小项  |         使最小项为1的变量取值         | 对应的十进制数 | 编号  |\n| :------: | :-----------------------------------: | :------------: | :---: |\n|          |   $A\\ \\ \\ \\ \\ \\ \\ B\\ \\ \\ \\ \\ \\ \\ C$   |                |       |\n| $A'B'C'$ | $0\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       0        | $m_0$ |\n| $A'B'C$  | $0\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       1        | $m_1$ |\n| $A'BC'$  | $0\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       2        | $m_2$ |\n|  $A'BC$  | $0\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       3        | $m_3$ |\n| $AB'C'$  | $1\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       4        | $m_4$ |\n|  $AB'C$  | $1\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       5        | $m_5$ |\n|  $ABC'$  | $1\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       6        | $m_6$ |\n|  $ABC$   | $1\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       7        | $m_7$ |\n\n<center><b>三变量最大项的编号表</b></center>\n\n|     最大项     |         使最大项为0的变量取值         | 对应的十进制数 | 编号  |\n| :------------: | :-----------------------------------: | :------------: | :---: |\n|                |   $A\\ \\ \\ \\ \\ \\ \\ B\\ \\ \\ \\ \\ \\ \\ C$   |                |       |\n|  $A + B + C$   | $0\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       0        | $M_0$ |\n|  $A + B + C'$  | $0\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       1        | $M_1$ |\n|  $A + B' + C$  | $0\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       2        | $M_2$ |\n| $A + B' + C'$  | $0\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       3        | $M_3$ |\n|  $A' + B + C$  | $1\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       4        | $M_4$ |\n| $A' + B + C'$  | $1\\ \\ \\ \\ \\ \\ \\ \\ 0\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       5        | $M_5$ |\n| $A' + B' + C$  | $1\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 0$ |       6        | $M_6$ |\n| $A' + B' + C'$ | $1\\ \\ \\ \\ \\ \\ \\ \\ 1\\ \\ \\ \\ \\ \\ \\ \\ 1$ |       7        | $M_7$ |\n\n> 最大项和最小项存在的关系：$M_i = m_i'$\n\n**逻辑函数的最小项之和形式**\n$$\n\\begin{aligned}\nY &= ABC' + BC \\\\\n&= ABC' + (A + A')BC\\\\\n&= ABC' + ABC + A'BC\\\\\n&= m_3 + m_6 + m_7\\\\\n&= \\sum m(3,6,7)\n\\end{aligned}\n$$\n\n> 首先将给定的逻辑函数式化为若干乘积项之和的形式，然后再利用基本公式$A + A' = 1$将每个乘积项中缺少的因子补全，即可将**与或**的形式化为最小项之和的标准形式\n\n**逻辑函数的最大项之积形式**\n$$\n\\begin{aligned}\nY &= A'B + AC \\\\\n&= (A'B + A)(A'B + C)\\\\\n&= (A + B)(A' + C)(B + C)\\\\\n&= (A + B + CC')(A' + BB' C)(AA' + B + C)\\\\\n&= (A + B + C)(A + B + C')(A' + B + C)(A' + B' + C)\\\\\n&= \\prod M (0,1,4,6)\n\\end{aligned}\n$$\n\n> 首先我们把任何一个逻辑函数式化成若干多项式相乘的**或与**形式，然后再利用基本公式$AA' = 0$将每个多项式中缺少的变量补齐，就可以将函数式的或与形式化成最大项之积的形式\n\n#### 逻辑函数的化简方法\n\n**公式化简法**\n\n**卡诺图化简法**\n"},{"title":"离散数学复习（一）","tags":["离散数学","复习"],"categories":["学习"],"author":"w乐意","excerpt":"\n>**记录一下复习离散数学的过程**\n\n","link":"/posts/discrete-mathematics-review-1","content":"\n>**记录一下复习离散数学的过程**\n\n<!-- more -->\n\n## 数理逻辑\n\n### 等值式\n\n<center><b>24个等值式</b></center>\n\n|      名称      |                             公式                             |    名称    |                             公式                             |\n| :------------: | :----------------------------------------------------------: | :--------: | :----------------------------------------------------------: |\n|   双重否定律   |               $A \\Leftrightarrow \\neg \\neg A$                |   幂等律   | $A \\Leftrightarrow A \\vee A$<br />$A \\Leftrightarrow A \\wedge A$ |\n|     交换律     | $A \\vee B \\Leftrightarrow B \\vee A$<br />$A \\wedge B \\Leftrightarrow B \\wedge A$ |   结合律   | $(A \\vee B) \\vee C \\Leftrightarrow A \\vee (B \\vee C)$<br />$(A \\wedge B) \\wedge C \\Leftrightarrow A \\wedge (B \\wedge C)$ |\n|     分配律     | $A \\vee (B \\wedge C) \\Leftrightarrow (A \\vee B) \\wedge (A \\vee C)$<br />$A \\wedge (B \\vee C) \\Leftrightarrow (A \\wedge B) \\vee (A \\wedge C)$ |  德摩根律  | $\\neg (A \\vee B) \\Leftrightarrow \\neg A \\wedge \\neg B$<br />$\\neg (A \\wedge B) \\Leftrightarrow \\neg A \\vee \\neg B$ |\n|     吸收律     | $A \\vee (A \\wedge B) \\Leftrightarrow A$<br />$A \\wedge (A \\vee B) \\Leftrightarrow A$ |    零律    | $A \\vee 1 \\Leftrightarrow 1$<br />$A \\wedge 0 \\Leftrightarrow 0$ |\n|     同一律     | $A \\vee 0 \\Leftrightarrow A$<br />$A \\wedge 1 \\Leftrightarrow A$ |   排中律   |              $A \\vee \\neg A \\Leftrightarrow 1$               |\n|     矛盾律     |             $A \\wedge \\neg A \\Leftrightarrow 0$              | 蕴涵等值式 |       $A \\rightarrow B \\Leftrightarrow \\neg A \\vee B$        |\n|   等价等值式   | $A \\leftrightarrow B \\Leftrightarrow (A \\rightarrow B) \\wedge (B \\rightarrow A)$ |  假言易位  | $A \\rightarrow B \\Leftrightarrow \\neg B \\rightarrow \\neg A$  |\n| 等价否定等值式 | $A \\leftrightarrow B \\Leftrightarrow \\neg A \\leftrightarrow \\neg B$ |   归谬论   | $(A \\rightarrow B) \\wedge (A \\rightarrow \\neg B) \\Leftrightarrow \\neg A$ |\n\n\n\n<center><b>9个推理定律</b></center>\n\n|                             公式                             |                  定律                  |\n| :----------------------------------------------------------: | :------------------------------------: |\n|                  $A \\Rightarrow (A \\lor B)$                  |                 附加律                 |\n|                 $(A \\land B) \\Rightarrow A$                  |                 化简律                 |\n|              $(A \\to B) \\land A \\Rightarrow B$               |                假言推理                |\n|         $(A \\to B) \\land \\neg B \\Rightarrow \\neg A$          |                 拒取律                 |\n|           $(A \\lor B) \\land \\neg B \\Rightarrow A$            |               析取三段论               |\n|      $(A \\to B) \\land (B \\to C) \\Rightarrow (A \\to C)$       |               假言三段论               |\n| $(A \\leftrightarrow B) \\land (B \\leftrightarrow C) \\Rightarrow (A \\leftrightarrow C)$ |               等价三段论               |\n| $(A \\to B) \\land (C \\to D) \\land (A \\lor C) \\Rightarrow (B \\lor D)$<br />$(A \\to B) \\land (\\neg A \\to B) \\Rightarrow B$ | 构造性二难<br />构造性二难（特殊形式） |\n| $(A \\to B) \\land (C \\to D) \\land (\\neg B \\lor \\neg D) \\Rightarrow (\\neg A \\lor \\neg C)$ |               破坏性二难               |\n\n"},{"title":"Gemini使用技巧","tags":["AI","技巧"],"categories":["教程"],"author":"w乐意","excerpt":"\nGoogle的Gemini大模型应该算得上是比较好用的了，比较出名就是**Gemini 2.5 Flash**和**Gemini 2.5 Pro**。最主要的是它可以免费使用（每天有一定的免费额度，但对于普通人来说已经足够用了）。在2025年6月30日前进行学生认证，就可以免费使用15个月的超强版**Gemini 2.5 Pro**模型，但是我没有薅到羊毛。现在分享一些Gemini的使用技巧。\n\n","link":"/posts/gemini-tips","content":"\nGoogle的Gemini大模型应该算得上是比较好用的了，比较出名就是**Gemini 2.5 Flash**和**Gemini 2.5 Pro**。最主要的是它可以免费使用（每天有一定的免费额度，但对于普通人来说已经足够用了）。在2025年6月30日前进行学生认证，就可以免费使用15个月的超强版**Gemini 2.5 Pro**模型，但是我没有薅到羊毛。现在分享一些Gemini的使用技巧。\n\n<!-- more -->\n\n## 使用Gemini（网页端）\n\n网页端有两个地址：\n\n> **https://aistudio.google.com**\n\n这个网站是面向开发者的研究平台，特点是功能简陋，高级模型免费无限量，有文生图/视频等功能。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/aistudio.png)\n\n首先需要登录谷歌账号，界面右边可以选择大模型，可以免费使用Gemini 2.5 Pro，还可以设置一些参数。界面左边Stream是一个实时音视频对话，Generate Media是文生视频的功能，Build里面有一些代码案例，展示如何接入Gemini的API，做一些好玩有趣的应用，History可以保存一些常用的提示词。\n\n> **https://gemini.google.com**\n\n这个网站是面向普通用户的，简洁美观，多了一些用户友好的功能，高级模型限量。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/gemini-google.png)\n\n首先要登陆谷歌账户，左上角可以切换模型，免费用户使用Deep Research和Gemini 2.5 Pro存在使用限制。\n\n> **这两个网站都需要国外的上网环境**\n\n## 使用Gemini（调用API）\n\n下面的表格展示了免费用户可以使用的模型\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E7%9A%84%E6%A8%A1%E5%9E%8B.png)\n\n其中RPM指的是每分钟的最大请求次数，RPD指的是每天的最大请求次数。\n\n我们可以看到对于Gemini 2.5 Pro和Gemini 2.5 Flash每天的免费请求次数分别为100次和250次（数据可能会变化），已经足够用了。\n\n### 获取API Key\n\n下面我们要获取API密钥。回到网站**https://aistudio.google.com**，点击右上角的**Get API key**，点击**创建API密钥**，随便选个项目点击创建，然后复制API密钥并保存好。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/api%E5%AF%86%E9%92%A5.png)\n\n我们使用免费的AI客户端[**Cherry Studio**](https://www.cherry-ai.com/)，安装好后。点击左下角的设置来到模型服务，选择提供商Gemini，将刚刚复制的API密钥填写过来，然后添加模型，可以去之前的网页里查看可以免费使用的模型。添加完成后，回到聊天页面，选择模型，即可开始对话。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/cherrystudio.png)\n\n## 国内中转\n\nGemini的API虽好，但是有一点不足的是它有地区限制，必须连着国外的上网环境才可以使用。我们可以自建一个免费的代理，把它的API中转到国内，在国内就可以免费使用了。下面使用GitHub开源项目`openai-gemini`实现这个功能。\n\n> **Github仓库地址：https://github.com/PublicAffairs/openai-gemini**\n\n我们找到Deploy to Netlify，点击按钮跳转到Netlify。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/openaigemini.png)\n\n然后点击Connect to Github，登录自己的GitHub账户。随便起个名字点击save，等待部署完成。部署完成后，我们可以获得一个域名，这个域名在国内是可以直连的。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E7%9B%B4%E8%BF%9E%E5%9F%9F%E5%90%8D.png)\n\n回到Cherry Studio这边，在模型服务这里点击添加提供商类型，类型选择OpenAI，名称随便填一个，然后API密钥填写之前获得的密钥，API地址填写刚刚获得的域名，然后在前面添加`https://`，完整版就是`https://域名`，填写完成后添加模型，可以添加上面提到过的免费模型，完成后可以在聊天界面验证。这样就可以将API中转到国内了。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E6%B7%BB%E5%8A%A0%E6%A8%A1%E5%9E%8B%E6%8F%90%E4%BE%9B%E5%95%86.png)"},{"title":"GitHub主页美化教程","tags":["Github"],"categories":["教程"],"author":"w乐意","excerpt":"\n","link":"/posts/github-home-bea-tutorial","content":"\n"},{"title":"免费搭建本地音乐播放器","tags":["音乐","免费"],"categories":["教程"],"author":"w乐意","excerpt":"\n我是一个很喜欢听歌的人，尝试过很多主流的音乐软件，像什么QQ音乐、酷狗音乐、网易云音乐，但是他们都满足不了我的需求，经常会有版权问题，之前能听的歌不知道哪天就会不能听了。还有就是现在大多数歌都需要会员，会员到期后歌也不能听了。最主要的一个原因是，这些音乐软件太臃肿了，什么功能都往里面加，感觉听歌都变得次要了，存在种种不便。\n\n现在分享一下我的做法，个人体验还不错。\n\n","link":"/posts/listen-to-songs-locally-for-free","content":"\n我是一个很喜欢听歌的人，尝试过很多主流的音乐软件，像什么QQ音乐、酷狗音乐、网易云音乐，但是他们都满足不了我的需求，经常会有版权问题，之前能听的歌不知道哪天就会不能听了。还有就是现在大多数歌都需要会员，会员到期后歌也不能听了。最主要的一个原因是，这些音乐软件太臃肿了，什么功能都往里面加，感觉听歌都变得次要了，存在种种不便。\n\n现在分享一下我的做法，个人体验还不错。\n\n<!-- more -->\n\n## 播放器\n\n播放器我选择的是**椒盐音乐**，这是一款本地音乐播放器软件。\n\n> GitHub仓库地址：https://github.com/Moriafly/SaltPlayerSource\n\n进入仓库后，点击右侧的Releases，选择自己对应的系统下载即可。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E6%A4%92%E7%9B%90%E9%9F%B3%E4%B9%90GitHub%E4%BB%93%E5%BA%93.png)\n\n## 歌曲\n\n有了播放器还不够，还要有歌曲文件，最好是高品质的。哪里可以下载到呢？我这里分享两个比较实用的方法。\n\n#### 天天悦听\n\n浏览器搜索**天天悦听**，下载即可。这款软件可以搜索到大部分的歌，早期的和最近流行的歌几乎都有，可以选择下载多种品质的歌曲到本地，同时可以在线试听，下载歌词。但是有一个比较不好的点，有些歌下载不了，显示下载失败，不知道是什么原因。\n\n下载的歌曲文件会放在`/Download/Music`，歌词会放在`/Download/Music/Lyric`，可以去手机文件管理器里面找，或者可以安装一个**MT管理器**，这个管理文件比较方便，后面介绍。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%A4%A9%E5%A4%A9%E6%82%A6%E5%90%AC.jpg)\n\n#### 酷我音乐破解版\n\n这个方法是我比较推荐的，是我室友最近给我说的，尝试了一下，体验还可以，但是这里不推荐使用盗版软件哈，请支持正版。\n\n> 请支持正版软件\n\n下载方法的话，可以在微信主页搜索**酷我音乐破解版**，时间最新的那个就是，因为有很多公众号会分享这种软件，搜索的时候留意一下就可以。下载安装后，你会发现这跟正版酷我音乐几乎一样，不同就在于你登录后会默认是会员，可以免费听歌下载歌，你要是不介意甚至可以直接用它听歌，大部分歌都可以听，但是需要注意一下，软件会更新，更新之后老版本可能就不能正常听歌了，你需要重新去安装最新版。\n\n然后这里再说一下下载歌曲的时候需要注意的一个点，最上面的两个音质不要下载，它应该是酷我音乐自己搞的一种编码格式，不像常规的mp3、flac格式，点开就可以听，我们选择无损音质下载就可以。下载目录为`Download/KuwoMusic/music`。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E9%85%B7%E6%88%91%E9%9F%B3%E4%B9%90%E7%A0%B4%E8%A7%A3%E7%89%88.jpg)\n\n## 歌词\n\n搞定了播放器和歌曲，按理来说这个时候就可以把本地歌曲文件导入到播放器中了，但是你会发现，导入进去了只能听，看不到歌词，这是我们不可以接受的。现在我分享一个软件：**音乐标签**，可以完美解决歌词问题。\n\n下载地址：https://www.downkuai.com/android/152707.html\n\n这个软件很小，但是功能强大。为了给我们本地的歌单匹配歌词，我们可以打开音乐标签，进入歌单文件夹，点击右下角的铅笔，点击自动匹配标签，便可以为我们的歌单匹配歌词，英文歌曲也可以自动匹配中文翻译。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E9%9F%B3%E4%B9%90%E6%A0%87%E7%AD%BE.jpg)\n\n如果不想这样操作，其实还有另外的方法，下面介绍。\n\n## 使用方法\n\n现在我们已经解决了播放器、歌曲、歌词的问题，下面介绍一下如何将它们联动起来。\n\n首先我们先在手机里新建一个用来存放歌曲文件的文件夹，例如说叫**歌单**，我们以后下载的歌就全放在这个文件夹里面，方便管理。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E6%AD%8C%E5%8D%95%E6%96%87%E4%BB%B6%E5%A4%B9.jpg)\n\n然后打开**椒盐音乐**软件，在左边侧边栏中选择扫描音乐，然后我们可以自定义一个扫描文件夹，选择为刚刚创建的**歌单**文件夹，然后点击上方的开始扫描即可，扫描完成后就可以看到所有的音乐了。如果你前面已经提前匹配好了歌词、专辑等信息，那么现在就可以开始听歌了，页面很美观。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E6%89%AB%E6%8F%8F%E9%9F%B3%E4%B9%90.jpg)\n\n如果你没有匹配歌词，那还可以利用下面的方法进行匹配。\n\n随便点开一首歌开始播放，点击播放页面右下角的三个点，并选择**使用音乐标签应用编辑**，随后在下面的页面中点击**放大镜**按钮，搜索歌词专辑等信息，选择对应的版本匹配即可。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%8C%B9%E9%85%8D%E6%AD%8C%E8%AF%8D.jpg)\n\n如果你已经成功完成了以上步骤，那么你就可以拥有一个属于你自己的本地音乐播放器了，接下来你可以自行研究上述软件更多的功能，例如设置播放器的外观、歌词样式等。\n\n## 续\n\n然后再介绍一个文件管理神器，**MT管理器**，手机应用商店就可以搜索到，很方便，而且它是双列布局，这样有利于我们将下载的歌曲的文件移动到歌单里面，具体用法可以自行搜索。\n\n最后我会将上面介绍到的软件上传到[蓝奏·云存储](https://pc.woozooo.com/)，有需要可以自行下载（酷我音乐破解版请自行搜索下载）\n\n>https://wly-wf.lanzouo.com/b011lhibab\n>\n>密码:gzza"},{"title":"沙拉查词使用技巧","tags":["英语","技巧"],"categories":["教程"],"author":"w乐意","excerpt":"\n分享一个翻译的神器。\n\n这类工具其实有很多，比较好用的一般就是[**沉浸式翻译**](https://immersivetranslate.com)这个浏览器插件了，但最近又被爆出来会泄露用户数据。这次分享的一个神器是[**沙拉查词**](https://saladict.crimx.com)。\n\n","link":"/posts/saladict-tips","content":"\n分享一个翻译的神器。\n\n这类工具其实有很多，比较好用的一般就是[**沉浸式翻译**](https://immersivetranslate.com)这个浏览器插件了，但最近又被爆出来会泄露用户数据。这次分享的一个神器是[**沙拉查词**](https://saladict.crimx.com)。\n\n<!-- more -->\n\n> **视频教程：https://www.bilibili.com/video/BV1ki4y1x7EN**\n\n## 安装\n\n这个其实也是浏览器的一个插件，适配Edge、Chrome、Firefox等常用浏览器。\n\n> Edge浏览器插件下载地址：[**沙拉查词-聚合词典划词翻译**](https://microsoftedge.microsoft.com/addons/detail/沙拉查词聚合词典划词翻译/idghocbbahafpfhjnfhpbfbmpegphmmp)\n\n## 配置\n\n安装完成后，需要进行基本的设置，进入浏览器的插件页面，点击沙拉查词右边三个点，选择扩展选项进入**沙拉查词**的配置界面\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E9%85%8D%E7%BD%AE%E9%A1%B5%E9%9D%A2.png)\n\n可以按照下面配置：\n\n**基本选项**：开启**启用划词翻译、开启后台保持运行**\n\n**单词管理**：勾选所有上下文翻译引擎\n\n**情景模式**：每种模式相当于一套不同的设置，可以根据需要增加或删除模式\n\n**查词面板**：自定义查词面板，查词面板支持自己添加CSS。可按照下面代码设置，个人觉得还是挺好看的。\n\n（感谢开源：https://github.com/crimx/ext-saladict/discussions/2210）\n\n```css\n/* 参考 Custom Theme [自定义主题] 极简主题 Nexmoe #1567 */\n.menuBar {\n    background-color: #fff;\n    border-bottom: 1px solid #eee;\n    padding: 8px;\n}\n\n.menuBar-SearchBox_Wrap {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.menuBar-SearchBox {\n    color: rgba(242, 104, 0);\n    background-color: #eee;\n    padding: 8px 10px;\n    border-radius: 20px;\n    font-weight: bold;\n}\n\n.menuBar-Btn_Icon-fav,\n.menuBar-Btn_Icon-history {\n    stroke: #222;\n}\n\n.menuBar-Btn_Icon {\n    fill: #000;\n}\n\n.menuBar-Btn_Icon-fav.isActive {\n    fill: rgba(242, 104, 0, .5);\n    stroke: rgba(242, 104, 0);\n    stroke-width: 6%;\n}\n\n.mtaBox-TextArea-Wrap,\n.mtaBox-DrawerBtn,\n.waveformBox.saladict-external,\n.dictItemHead-Logo {\n    display: none;\n}\n\n.dictItem {\n    padding: 0 10px;\n}\n\n.dictItem:first-child {\n    padding-top: 10px;\n}\n\n.dictItem-Body {\n    padding: 0 15px;\n}\n\n.dictItemHead {\n    background: #eee;\n    border-radius: 6px;\n    padding: 6px;\n    height: auto;\n}\n\n.dictPanel-Root {\n    box-shadow: rgba(0, 0, 0, 0.2) 0 7px 21px 2px;\n}\n\n.isAnimate .menuBar-Btn,\n.isAnimate .menuBar-Btn-dir {\n    border-radius: 6px;\n}\n\n/* 剑桥词典排版 */\n\n/* title模块 */\n.pos-header.dpos-h {\n    padding: 15px 0;\n}\n\n/* title-英文单词 */\n.hw.dhw {\n    font-size: 30px;\n    padding: 20px 0 20px;\n}\n\n/* title-词性tag行*/\n.posgram.dpos-g.hdib.lmr-5 {\n    padding: 10px 0 8px 0;\n}\n\n/* title-词性tag */\n.pos.dpos {\n    border: solid 2px #F26800;\n    border-radius: 10px;\n    padding: 1px 3px 1px;\n    background-color: rgba(242, 104, 0, .3);\n}\n\nspan.irreg-infls.dinfls {\n    padding: 5px 4px 1px;\n}\n\n/* 帮助不大的元素 */\n.dwl.hax,\n.dbtn,\n.daccord {\n    display: none;\n}\n\n/* 词义模块 */\n.pr.dsense {\n    padding: 0 0 0 15px;\n    border-left: solid 3px;\n    border-color: rgba(242, 104, 0, .8);\n    margin: 10px 0 30px 0;\n}\n\n/* 词义-英文 */\n.ddef_h {\n    font-size: 16px;\n    font-weight: bold;\n    background-color: #f7f7f7;\n    padding: 10px;\n}\n\n/* 词性英文 */\n.dsense_h {\n    font-size: 15px;\n    color: #34675C;\n    padding: 5px 0 10px;\n}\n\n/* 词义-中文释义 */\n.def-body.ddef_b .dtrans {\n    text-decoration: underline wavy 2px;\n    text-decoration-color: rgba(242, 104, 0, .6);\n    font-size: 16px;\n    font-weight: bolder;\n    color: #000000;\n}\n\n/* 例句-模块 */\n.def-body.ddef_b {\n    padding: 10px 0;\n}\n\n/* 例句-英文字体 */\n.eg.deg {\n    color: #7d7d7d;\n    font-size: 15px;\n}\n\n/* 例句-中文字体 */\n.examp.dexamp .trans.dtrans.dtrans-se.hdb.break-cj {\n    color: #c2c2c2;\n    font-size: 12px;\n    background-color: transparent;\n    text-decoration: none;\n}\n\n/* 补充内容-模块 */\n.pr.phrase-block.dphrase-block {\n    padding: 10px 10px;\n    margin: 10px 0;\n    border: 1px dashed #A3CCAB;\n}\n\n/* 补充内容-短语英文 */\n.phrase-head.dphrase_h {\n    font-size: 18px;\n    color: rgba(242, 104, 0);\n    padding: 10px 0;\n}\n\n.xref.see_also.hax.dxref-w {\n    padding: 10px 0;\n}\n\n/* 同义词等其他-模块 */\n.xref.synonyms.hax.dxref-w.lmt-25,\n.xref.synonym.hax.dxref-w.lmt-25,\n.xref.synonyms.hax.dxref-w,\n.xref.idioms.hax.dxref-w.lmt-25.lmb-25,\n.xref.idiom.hax.dxref-w.lmt-25.lmb-25,\n.xref.phrasal_verb.hax.dxref-w.lmt-25.lmb-25,\n.xref.phrasal_verbs.hax.dxref-w.lmt-25.lmb-25,\n.xref.phrasal_verbs.hax.dxref-w.lmt-25.lmb-25,\n.xref.related_words.hax.dxref-w.lmt-25,\n.xref.related_word.hax.dxref-w.lmt-25.lmb-25,\n.xref.grammar.hax.dxref-w.lmt-25.lmb-25,\n.xref.grammars.hax.dxref-w.lmt-25.lmb-25,\n.xref.opposites.hax.dxref-w,\n.xref.opposite.hax.dxref-w,\n.xref.compare.hax.dxref-w {\n    padding: 20px 10px;\n    margin: 5px 0;\n    border: 2px dashed;\n    border-color: rgba(242, 104, 0, .5);\n    background-color: rgba(242, 104, 0, .05) !important;\n}\n\n/* 同义词等-大标题 */\nstrong.xref-title.dxref-t {\n    font-size: 20px;\n    color: rgba(242, 104, 0);\n}\n\n.item.lc.lc1.lc-xs6-12.lpb-10.lpr-10 {\n    padding: 3px 0;\n}\n\n/* 同义词-用词 */\nspan.x-lab.dx-lab {\n    padding: 0 6px 0;\n}\n\n/* 同义词-用词地区 */\nspan.region {\n    color: #75b381;\n    font-size: 12px;\n    border: solid 1px #A3CCAB;\n    border-radius: 5px;\n    padding: 1px 1.5px 1px;\n}\n\n/* 同义词-用词场合 */\n.usage {\n    color: #F26800;\n    font-size: 12px;\n    border: solid 1px #F26800;\n    border-radius: 10px;\n    padding: 1px 1.5px 1px;\n}\n\n/* 同义词-单词 */\nspan.x-h.dx-h {\n    font-size: 15px;\n    font-weight: bold;\n}\n\n/* 同义词-单词补充 */\nspan.x-num.dx-num {\n    font-size: 10px;\n}\n```\n\n**查词习惯**：取消勾选**鼠标悬停查词**\n\n**词典设置**：可以自己添加词典\n\n**词典账号**：随着沙拉查词用户增多，如经常使用机器翻译，建议到官网申请帐号以获得更稳定的体验以及更准确的结果。不弄也是可以的。\n\n**快捷查词**：开启**独立窗口**\n\n**权限管理**：开启**读取剪贴板、写入剪贴板**\n\n其他设置可以保持默认，如果有需要可以自己探索。设置到这里，就可以愉快的使用沙拉查词插件翻译浏览器中选中的内容了。但是为了使用体验更好，可以对浏览器再次进行设置。\n\n具体方法如下：打开浏览器右上角三个点->进入设置->外观->其他外观设置->上下文菜单->**关闭**选中文本时显示迷你菜单\n\n不关闭迷你菜单的效果：\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E4%B8%8D%E5%85%B3%E9%97%AD%E8%BF%B7%E4%BD%A0%E8%8F%9C%E5%8D%95.png)\n\n> 迷你菜单指的是黑框内的内容\n\n此时迷你菜单会遮挡住沙拉查词，下面是关闭迷你菜单后的效果\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%85%B3%E9%97%AD%E8%BF%B7%E4%BD%A0%E8%8F%9C%E5%8D%95.png)\n\n当你选中文本时，鼠标右上角会出现一个沙拉查词的图标，点击后可以查看翻译的结果，如下所示。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E7%A4%BA%E6%84%8F%E5%9B%BE.png)\n\n你可以选择不同的翻译模式，同时也可以将翻译结果钉在界面上，就可以愉快的查单词啦！\n\n## 浏览器外查词\n\n前面只是基本功能，其强大之处其实在于它可以在浏览器外查词，甚至翻译英文论文，体验比知云翻译好得多。建议配合自己的阅读器使用，不要使用浏览器自带的阅读器。\n\n> **教程：https://github.com/crimx/ext-saladict/discussions/493**\n\n### 配置方法\n\n首先进入浏览器的插件设置界面：**点击管理扩展->键盘快捷方式**\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E8%AE%BE%E7%BD%AE.png)\n\n找到沙拉查词的快捷键设置部分，并为**在独立窗口中搜索剪贴板内容**设置快捷键，我设置的是Alt+L。同时要将应用范围选择为**全局**\n\n然后在沙拉查词设置中开启**后台保持运行**（前面已经设置）\n\n下面要安装捷径软件**Quicker**\n\n> **地址：https://getquicker.net**\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/quicker.png)\n\n点击立即下载，选择对应操作系统的版本进行安装即可。\n\n接下来安装**文本/截图动作**\n\n在Quicker主页的搜索框搜索[**文本/截图动作**](https://getquicker.net/sharedaction?code=b0d1a134-8284-4a44-d1be-08d746da5869)，点击复制到剪贴板，然后点击鼠标中键，呼出Quicker面板，并在空白处单击右键，选择粘贴分享的动作，点击安装即可。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%AE%89%E8%A3%85%E5%8A%A8%E4%BD%9C.png)\n\n如果你不想单击鼠标中键呼出Quicker，也可以打开Quicker的设置界面，点击弹出面板，并选择你自己喜欢的呼出方式。例如我选择的就是长按鼠标右键呼出。你也可以在右边的按键测试区测试快捷键。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%91%BC%E5%87%BA%E6%96%B9%E5%BC%8F.png)\n\n### 使用教程\n\n完成上面的配置后，就差不多可以开始使用了。首先它包含4种强大的翻译方式：文本截图、划词翻译、复制翻译、触边翻译\n\n长按右键呼出面板，在文本/截图翻译动作上单击右键，可以看到一些功能，如下所示。\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD.png)\n\n#### 文本截图\n\n**使用方法：**\n\n1、选中文本，长按右键呼出面板，在文本/截图翻译动作上单击右键，选择文本截图，则翻译选中的文本\n\n2、未选中文本，长按右键呼出面板，在文本/截图翻译动作上单击右键，选择文本截图，则手动截图选择文本翻译\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E6%96%87%E6%9C%AC%E6%88%AA%E5%9B%BE.gif)\n\n#### 划词翻译\n\n**使用方法：**\n\n长按右键呼出面板，在文本/截图翻译动作上单击右键，选择划词翻译，此时右下角会出现划词翻译的运行框，双击选中文本或者划动选中文本即自动翻译\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91.gif)\n\n#### 复制翻译\n\n**使用方法：**\n\n长按右键呼出面板，在文本/截图翻译动作上单击右键，选择复制翻译，此时右下角会出现复制翻译的运行框，复制文本即自动翻译\n\n![](https://image-wlyblog-1370229696.cos.ap-guangzhou.myqcloud.com/img/%E5%A4%8D%E5%88%B6%E7%BF%BB%E8%AF%91.gif)\n\n#### 触边翻译\n\n**使用方法：**\n\n1、选中文本，长按右键呼出面板，在文本/截图翻译动作上单击右键，选择触边翻译，此时右下角会出现触边翻译的运行框，鼠标移动至左边缘即可自动翻译\n\n2、未选中文本，长按右键呼出面板，在文本/截图翻译动作上单击右键，选择触边翻译，此时右下角会出现触边翻译的运行框，鼠标移动至左边缘，触发文本截图翻译\n\n## 总结\n\n以上就是最为基础的玩法，更多进阶玩法可以自己去官网或者GitHub了解。利用好这个翻译神器，不仅对学习英语很有帮助，而且为科研党读英文文献提供了巨大的便利。\n\n>**视频教程：https://www.bilibili.com/video/BV1ki4y1x7EN**\n>\n>**沙拉查词主页：https://saladict.crimx.com**\n>\n>**GitHub仓库地址：https://github.com/crimx/ext-saladict**\n>\n>**文字版教程：https://github.com/crimx/ext-saladict/discussions/493**\n"},{"title":"写在二十岁的尾巴上","tags":["记录","感想"],"categories":["随笔"],"author":"w乐意","excerpt":"\n祝自己生日快乐！\n\n","link":"/posts/to-my-21st-year","content":"\n祝自己生日快乐！\n\n<!-- more -->\n\n### 感情\n\n最可惜的应该就是我失去了我最亲爱的可可同学。\n\n说实话很难走出来，分手后无数个夜晚里，我想了关于我们两个之间的所有，分析了可能存在的问题，想好了以后我该怎么做，也为将来做好了打算。我心里很想和她沟通，想把我想的所有都跟她讲，我幻想她听过之后会回心转意。所以我一直都想去找她聊聊，然而结果是我的微信QQ都被拉黑了，我想她应该是下定决心了，我也不太好继续纠缠她了，我写的几万字的话她可能再也看不到了，我真的觉得很可惜，我想挽回，我决心改变。\n\n可现实就是这样，人总要向前看，非常感谢她这一路的陪伴，让我成长了非常多，希望她以后能够找到属于自己的幸福！\n\n可能后面我会把我想的所有都写下来，说不定哪天她会看到呢。\n\n### 学业\n\n我成功保研了，但是我却高兴不起来，我不知道她去了哪个学校，只是在分手前她去了中科大的夏令营，在合肥，长三角地区。我想去东南大学，但是进不去，最后还是去了西电，杭州研究院。她不想异地恋，所以我找了一个离合肥、南京、上海都很近的地方，就跟三年前一样，我选择留在南昌，离她能够近一点。\n\n她很优秀，可能我也配不上她吧。\n\n### 生活\n\n最大的转折点可能就是过几天的手术吧，国庆第一天我爸妈带我去了医院看医生，决定了要做手术。挺害怕的，还要全麻，又有点好奇，会不会完全失去那段记忆。手术要做两次，中间还要在家待一段时间，还好大四没有什么事情。希望手术顺利，希望生活越来越好！\n\n\n\n希望以后自己能够好好面对生活，好好珍惜心爱的人！\n"},{"title":"Vim使用教程","tags":["编程","技巧"],"categories":["教程"],"author":"w乐意","excerpt":"\nVim 是一个高度可配置的文本编辑器，旨在实现高效的文本编辑。它是大多数 UNIX 系统中分发的 vi 编辑器的改进版本。\n\nVim 通常被称为“程序员的编辑器”，对于编程非常有用，以至于许多人认为它是一个完整的 IDE。但这不仅仅适用于程序员。Vim 非常适合各种文本编辑，从撰写电子邮件到编辑配置文件。\n\n","link":"/posts/vim-usage-tutorial","content":"\nVim 是一个高度可配置的文本编辑器，旨在实现高效的文本编辑。它是大多数 UNIX 系统中分发的 vi 编辑器的改进版本。\n\nVim 通常被称为“程序员的编辑器”，对于编程非常有用，以至于许多人认为它是一个完整的 IDE。但这不仅仅适用于程序员。Vim 非常适合各种文本编辑，从撰写电子邮件到编辑配置文件。\n\n<!-- more -->\n\n## 安装\n\n你可以在Linux终端中输入`vi`或者`vim`查看是否安装了\n\n在基于Debian的发行版上，可以使用命令`sudo apt install vim`来安装"},{"title":"Zotero使用教程","tags":["文献","技巧"],"categories":["教程"],"author":"w乐意","excerpt":"\n最近了解到Zotero这一个文献管理软件，记录一下它的使用教程\n\n","link":"/posts/zotero-usage-tutorial","content":"\n最近了解到Zotero这一个文献管理软件，记录一下它的使用教程\n\n<!-- more -->"}]
